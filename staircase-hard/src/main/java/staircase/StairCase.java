/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package staircase;

import java.util.*;

public class StairCase {
    
    /**
     * Gets the total number of ways to hop the stairs given
     * you can hop either 1 or 2 stairs at a time
     */ 
    public int countWays(int steps) {
    	if( steps == 0 ){
    		return 1; 
    	}

    	if( steps < 0 ){
    		return 0;
    	}

        return countWays(steps-1) + countWays(steps-2);
    }

    /**
     * Gets all of the ways to hop the stairs given
     * you can hop either 1 or 2 stairs at a time
     */ 
    public List<List<Integer>> getWays(int steps) {
    	List<List<Integer>> ways = 
            new ArrayList<List<Integer>>();
        
        getWays(steps, new ArrayList<Integer>(), ways);

        return ways;
    }

    private void getWays(int steps, List<Integer> curr, List<List<Integer>> allPaths) {
    	if( steps == 0 ){
    		allPaths.add(new ArrayList<Integer>(curr));
    		return;
    	}

    	if( steps < 0 ){
    		return;
    	}

        //Step once
        curr.add(1);
        getWays(steps-1, curr, allPaths);
        curr.remove(curr.size()-1);

        //Step twice
        curr.add(2);
        getWays(steps-2, curr, allPaths);
        curr.remove(curr.size()-1);
    }


    public int countWaysDynamic(int n){
        

        int[] arr = new int[n+1];
        arr[0] = 1;
        arr[1] = 1;

        for( int i = 2; i <=n ; i++ ){
            arr[i] = arr[i-1] + arr[i-2];
        }

        return arr[n];
    }

    public int countWaysDynamicConstantSpace(int n){
        int f = 1;
        int g = 1;
        int cnt = 1;
        for( int i = 2; i <=n ; i++ ){
            cnt = f + g;
            f = g;
            g = cnt;
        }

        return cnt;
    }

   
}
